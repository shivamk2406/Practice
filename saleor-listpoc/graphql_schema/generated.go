// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package graphql_schema

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// ListCategoriesProductsProductCountableConnection includes the requested fields of the GraphQL type ProductCountableConnection.
type ListCategoriesProductsProductCountableConnection struct {
	Edges []ListCategoriesProductsProductCountableConnectionEdgesProductCountableEdge `json:"edges"`
}

// GetEdges returns ListCategoriesProductsProductCountableConnection.Edges, and is useful for accessing the field via an interface.
func (v *ListCategoriesProductsProductCountableConnection) GetEdges() []ListCategoriesProductsProductCountableConnectionEdgesProductCountableEdge {
	return v.Edges
}

// ListCategoriesProductsProductCountableConnectionEdgesProductCountableEdge includes the requested fields of the GraphQL type ProductCountableEdge.
type ListCategoriesProductsProductCountableConnectionEdgesProductCountableEdge struct {
	Node ListCategoriesProductsProductCountableConnectionEdgesProductCountableEdgeNodeProduct `json:"node"`
}

// GetNode returns ListCategoriesProductsProductCountableConnectionEdgesProductCountableEdge.Node, and is useful for accessing the field via an interface.
func (v *ListCategoriesProductsProductCountableConnectionEdgesProductCountableEdge) GetNode() ListCategoriesProductsProductCountableConnectionEdgesProductCountableEdgeNodeProduct {
	return v.Node
}

// ListCategoriesProductsProductCountableConnectionEdgesProductCountableEdgeNodeProduct includes the requested fields of the GraphQL type Product.
type ListCategoriesProductsProductCountableConnectionEdgesProductCountableEdgeNodeProduct struct {
	Id       string                                                                                                       `json:"id"`
	Name     string                                                                                                       `json:"name"`
	Variants []ListCategoriesProductsProductCountableConnectionEdgesProductCountableEdgeNodeProductVariantsProductVariant `json:"variants"`
}

// GetId returns ListCategoriesProductsProductCountableConnectionEdgesProductCountableEdgeNodeProduct.Id, and is useful for accessing the field via an interface.
func (v *ListCategoriesProductsProductCountableConnectionEdgesProductCountableEdgeNodeProduct) GetId() string {
	return v.Id
}

// GetName returns ListCategoriesProductsProductCountableConnectionEdgesProductCountableEdgeNodeProduct.Name, and is useful for accessing the field via an interface.
func (v *ListCategoriesProductsProductCountableConnectionEdgesProductCountableEdgeNodeProduct) GetName() string {
	return v.Name
}

// GetVariants returns ListCategoriesProductsProductCountableConnectionEdgesProductCountableEdgeNodeProduct.Variants, and is useful for accessing the field via an interface.
func (v *ListCategoriesProductsProductCountableConnectionEdgesProductCountableEdgeNodeProduct) GetVariants() []ListCategoriesProductsProductCountableConnectionEdgesProductCountableEdgeNodeProductVariantsProductVariant {
	return v.Variants
}

// ListCategoriesProductsProductCountableConnectionEdgesProductCountableEdgeNodeProductVariantsProductVariant includes the requested fields of the GraphQL type ProductVariant.
type ListCategoriesProductsProductCountableConnectionEdgesProductCountableEdgeNodeProductVariantsProductVariant struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns ListCategoriesProductsProductCountableConnectionEdgesProductCountableEdgeNodeProductVariantsProductVariant.Id, and is useful for accessing the field via an interface.
func (v *ListCategoriesProductsProductCountableConnectionEdgesProductCountableEdgeNodeProductVariantsProductVariant) GetId() string {
	return v.Id
}

// GetName returns ListCategoriesProductsProductCountableConnectionEdgesProductCountableEdgeNodeProductVariantsProductVariant.Name, and is useful for accessing the field via an interface.
func (v *ListCategoriesProductsProductCountableConnectionEdgesProductCountableEdgeNodeProductVariantsProductVariant) GetName() string {
	return v.Name
}

// ListCategoriesResponse is returned by ListCategories on success.
type ListCategoriesResponse struct {
	Products ListCategoriesProductsProductCountableConnection `json:"products"`
}

// GetProducts returns ListCategoriesResponse.Products, and is useful for accessing the field via an interface.
func (v *ListCategoriesResponse) GetProducts() ListCategoriesProductsProductCountableConnection {
	return v.Products
}

// __ListCategoriesInput is used internally by genqlient
type __ListCategoriesInput struct {
	First int `json:"first"`
}

// GetFirst returns __ListCategoriesInput.First, and is useful for accessing the field via an interface.
func (v *__ListCategoriesInput) GetFirst() int { return v.First }

func ListCategories(
	ctx context.Context,
	client graphql.Client,
	first int,
) (*ListCategoriesResponse, error) {
	req := &graphql.Request{
		OpName: "ListCategories",
		Query: `
query ListCategories ($first: Int!) {
	products(first: $first) {
		edges {
			node {
				id
				name
				variants {
					id
					name
				}
			}
		}
	}
}
`,
		Variables: &__ListCategoriesInput{
			First: first,
		},
	}
	var err error

	var data ListCategoriesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
